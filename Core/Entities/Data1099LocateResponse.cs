// The source file: 1099_LOCATE_RESPONSE, ID: 371440656, model: 746.
using System;
using System.ComponentModel;
using System.Text.Json.Serialization;
using Bphx.Cool;

using static Bphx.Cool.Functions;

namespace Gov.Kansas.DCF.Cse.Entities;

/// <summary>
/// RESP: OBLGESTB
/// This entity contains the responses received from I.R.S. 1099 interface 
/// against the 1099 request sent.
/// </summary>
[Serializable]
public partial class Data1099LocateResponse: View, ICloneable
{
  /// <summary>Default constructor.</summary>
  public Data1099LocateResponse()
  {
  }

  /// <summary>Copy constructor.</summary>
  /// <param name="that">An instance to copy.</param>
  public Data1099LocateResponse(Data1099LocateResponse that)
  {
    Init(that);
    Assign(that);
  }

  /// <summary>Creates a copy of this object.</summary>
  /// <returns>A copy of this instance.</returns>
  public new Data1099LocateResponse Clone() => new(this);

  /// <summary>Creates a copy of this object.</summary>
  /// <returns>A copy of this instance.</returns>
  object ICloneable.Clone() => Clone();

  /// <summary>Assigns value from another instance.</summary>
  /// <param name="that">Another instance.</param>
  public void Assign(Data1099LocateResponse that)
  {
    base.Assign(that);
    identifier = that.identifier;
    dateReceived = that.dateReceived;
    usageStatus = that.usageStatus;
    dateUsed = that.dateUsed;
    stateCode = that.stateCode;
    zipCode = that.zipCode;
    payerEin = that.payerEin;
    taxYear = that.taxYear;
    payerAccountNo = that.payerAccountNo;
    documentCode = that.documentCode;
    amountInd1 = that.amountInd1;
    amount1 = that.amount1;
    amountInd2 = that.amountInd2;
    amount2 = that.amount2;
    amountInd3 = that.amountInd3;
    amount3 = that.amount3;
    amountInd4 = that.amountInd4;
    amount4 = that.amount4;
    amountInd5 = that.amountInd5;
    amount5 = that.amount5;
    amountInd6 = that.amountInd6;
    amount6 = that.amount6;
    amountInd7 = that.amountInd7;
    amount7 = that.amount7;
    amountInd8 = that.amountInd8;
    amount8 = that.amount8;
    amountInd9 = that.amountInd9;
    amount9 = that.amount9;
    amountInd10 = that.amountInd10;
    amount10 = that.amount10;
    amountInd11 = that.amountInd11;
    amount11 = that.amount11;
    amountInd12 = that.amountInd12;
    amount12 = that.amount12;
    createdBy = that.createdBy;
    createdTimestamp = that.createdTimestamp;
    lastUpdatedBy = that.lastUpdatedBy;
    lastUpdatedTimestamp = that.lastUpdatedTimestamp;
    payeeLine1 = that.payeeLine1;
    payeeLine2 = that.payeeLine2;
    payeeLine3 = that.payeeLine3;
    payeeLine4 = that.payeeLine4;
    payerLine1 = that.payerLine1;
    payerLine2 = that.payerLine2;
    payerLine3 = that.payerLine3;
    payerLine4 = that.payerLine4;
    lrqIdentifier = that.lrqIdentifier;
    cspNumber = that.cspNumber;
  }

  /// <summary>
  /// The value of the IDENTIFIER attribute.
  /// Attribute, which together with relation to 1099_request, uniquely 
  /// identifies one occurrence of 1099_RESPONSE.
  /// The value is automatically generated by the system.
  /// </summary>
  [JsonPropertyName("identifier")]
  [DefaultValue(0)]
  [Member(Index = 1, Type = MemberType.Number, Length = 3)]
  public int Identifier
  {
    get => identifier;
    set => identifier = value;
  }

  /// <summary>
  /// The value of the DATE_RECEIVED attribute.
  /// Date the 1099 response was received.
  /// </summary>
  [JsonPropertyName("dateReceived")]
  [Member(Index = 2, Type = MemberType.Date, Optional = true)]
  public DateTime? DateReceived
  {
    get => dateReceived;
    set => dateReceived = value;
  }

  /// <summary>Length of the USAGE_STATUS attribute.</summary>
  public const int UsageStatus_MaxLength = 1;

  /// <summary>
  /// The value of the USAGE_STATUS attribute.
  /// Usage status of the response received from 1099 (IRS).
  /// Valid values are maintained in CODE_VALUE entity for CODE_NAME 
  /// INTERFACE_RESP_USAGE_STATUS
  /// space - not yet examined
  /// U     - Response has been used
  /// D     - Response has been discarded
  /// </summary>
  [JsonPropertyName("usageStatus")]
  [Member(Index = 3, Type = MemberType.Char, Length = UsageStatus_MaxLength, Optional
    = true)]
  public string UsageStatus
  {
    get => usageStatus;
    set => usageStatus = value != null
      ? TrimEnd(Substring(value, 1, UsageStatus_MaxLength)) : null;
  }

  /// <summary>
  /// The value of the DATE_USED attribute.
  /// Date on which the information from the response was used by the worker.
  /// </summary>
  [JsonPropertyName("dateUsed")]
  [Member(Index = 4, Type = MemberType.Date, Optional = true)]
  public DateTime? DateUsed
  {
    get => dateUsed;
    set => dateUsed = value;
  }

  /// <summary>Length of the STATE_CODE attribute.</summary>
  public const int StateCode_MaxLength = 2;

  /// <summary>
  /// The value of the STATE_CODE attribute.
  /// Returned by IRS
  /// State supplied by 1099. Could be blank.
  /// </summary>
  [JsonPropertyName("stateCode")]
  [Member(Index = 5, Type = MemberType.Char, Length = StateCode_MaxLength, Optional
    = true)]
  public string StateCode
  {
    get => stateCode;
    set => stateCode = value != null
      ? TrimEnd(Substring(value, 1, StateCode_MaxLength)) : null;
  }

  /// <summary>Length of the ZIP_CODE attribute.</summary>
  public const int ZipCode_MaxLength = 9;

  /// <summary>
  /// The value of the ZIP_CODE attribute.
  /// Returned by IRS
  /// ZIP code used by postal service. The five digits all could be zeros.
  /// </summary>
  [JsonPropertyName("zipCode")]
  [Member(Index = 6, Type = MemberType.Char, Length = ZipCode_MaxLength, Optional
    = true)]
  public string ZipCode
  {
    get => zipCode;
    set => zipCode = value != null
      ? TrimEnd(Substring(value, 1, ZipCode_MaxLength)) : null;
  }

  /// <summary>Length of the PAYER_EIN attribute.</summary>
  public const int PayerEin_MaxLength = 9;

  /// <summary>
  /// The value of the PAYER_EIN attribute.
  /// Returned by IRS
  /// Employer ID Number of the Payer.
  /// </summary>
  [JsonPropertyName("payerEin")]
  [Member(Index = 7, Type = MemberType.Char, Length = PayerEin_MaxLength, Optional
    = true)]
  public string PayerEin
  {
    get => payerEin;
    set => payerEin = value != null
      ? TrimEnd(Substring(value, 1, PayerEin_MaxLength)) : null;
  }

  /// <summary>
  /// The value of the TAX_YEAR attribute.
  /// Returned by IRS
  /// Tax year in YY form.
  /// </summary>
  [JsonPropertyName("taxYear")]
  [Member(Index = 8, Type = MemberType.Number, Length = 4, Optional = true)]
  public int? TaxYear
  {
    get => taxYear;
    set => taxYear = value;
  }

  /// <summary>Length of the PAYER_ACCOUNT_NO attribute.</summary>
  public const int PayerAccountNo_MaxLength = 20;

  /// <summary>
  /// The value of the PAYER_ACCOUNT_NO attribute.
  /// Returned by IRS
  /// Account no of the Payer.
  /// </summary>
  [JsonPropertyName("payerAccountNo")]
  [Member(Index = 9, Type = MemberType.Char, Length
    = PayerAccountNo_MaxLength, Optional = true)]
  public string PayerAccountNo
  {
    get => payerAccountNo;
    set => payerAccountNo = value != null
      ? TrimEnd(Substring(value, 1, PayerAccountNo_MaxLength)) : null;
  }

  /// <summary>Length of the DOCUMENT_CODE attribute.</summary>
  public const int DocumentCode_MaxLength = 2;

  /// <summary>
  /// The value of the DOCUMENT_CODE attribute.
  /// Specifies Document Code of the 1099 form. The document code describes the 
  /// source of the income.
  /// E.g.
  /// Form	Doc Code
  /// W-2	21
  /// W-2P	22
  /// 5498	28
  /// etc.
  /// The valid values and descriptions are maintained in CODE_VALUE entity for 
  /// CODE_NAME 1099_DOCUMENT_CODE
  /// </summary>
  [JsonPropertyName("documentCode")]
  [Member(Index = 10, Type = MemberType.Char, Length = DocumentCode_MaxLength, Optional
    = true)]
  public string DocumentCode
  {
    get => documentCode;
    set => documentCode = value != null
      ? TrimEnd(Substring(value, 1, DocumentCode_MaxLength)) : null;
  }

  /// <summary>Length of the AMOUNT_IND_1 attribute.</summary>
  public const int AmountInd1_MaxLength = 2;

  /// <summary>
  /// The value of the AMOUNT_IND_1 attribute.
  /// The document Indicator further describes the source of income identified 
  /// by the document code.
  /// </summary>
  [JsonPropertyName("amountInd1")]
  [Member(Index = 11, Type = MemberType.Char, Length = AmountInd1_MaxLength, Optional
    = true)]
  public string AmountInd1
  {
    get => amountInd1;
    set => amountInd1 = value != null
      ? TrimEnd(Substring(value, 1, AmountInd1_MaxLength)) : null;
  }

  /// <summary>
  /// The value of the AMOUNT_1 attribute.
  /// Income amount corresponding to the Document Code and Amount_ind_1.
  /// </summary>
  [JsonPropertyName("amount1")]
  [Member(Index = 12, Type = MemberType.Number, Length = 12, Optional = true)]
  public long? Amount1
  {
    get => amount1;
    set => amount1 = value;
  }

  /// <summary>Length of the AMOUNT_IND_2 attribute.</summary>
  public const int AmountInd2_MaxLength = 2;

  /// <summary>
  /// The value of the AMOUNT_IND_2 attribute.
  /// The document Indicator further describes the source of income identified 
  /// by the document code.
  /// </summary>
  [JsonPropertyName("amountInd2")]
  [Member(Index = 13, Type = MemberType.Char, Length = AmountInd2_MaxLength, Optional
    = true)]
  public string AmountInd2
  {
    get => amountInd2;
    set => amountInd2 = value != null
      ? TrimEnd(Substring(value, 1, AmountInd2_MaxLength)) : null;
  }

  /// <summary>
  /// The value of the AMOUNT_2 attribute.
  /// Income amount corresponding to the Document Code and Amount_ind_2.
  /// </summary>
  [JsonPropertyName("amount2")]
  [Member(Index = 14, Type = MemberType.Number, Length = 12, Optional = true)]
  public long? Amount2
  {
    get => amount2;
    set => amount2 = value;
  }

  /// <summary>Length of the AMOUNT_IND_3 attribute.</summary>
  public const int AmountInd3_MaxLength = 2;

  /// <summary>
  /// The value of the AMOUNT_IND_3 attribute.
  /// The document Indicator further describes the source of income identified 
  /// by the document code.
  /// </summary>
  [JsonPropertyName("amountInd3")]
  [Member(Index = 15, Type = MemberType.Char, Length = AmountInd3_MaxLength, Optional
    = true)]
  public string AmountInd3
  {
    get => amountInd3;
    set => amountInd3 = value != null
      ? TrimEnd(Substring(value, 1, AmountInd3_MaxLength)) : null;
  }

  /// <summary>
  /// The value of the AMOUNT_3 attribute.
  /// Income amount corresponding to the Document Code and Amount_ind_3.
  /// </summary>
  [JsonPropertyName("amount3")]
  [Member(Index = 16, Type = MemberType.Number, Length = 12, Optional = true)]
  public long? Amount3
  {
    get => amount3;
    set => amount3 = value;
  }

  /// <summary>Length of the AMOUNT_IND_4 attribute.</summary>
  public const int AmountInd4_MaxLength = 2;

  /// <summary>
  /// The value of the AMOUNT_IND_4 attribute.
  /// The document Indicator further describes the source of income identified 
  /// by the document code.
  /// </summary>
  [JsonPropertyName("amountInd4")]
  [Member(Index = 17, Type = MemberType.Char, Length = AmountInd4_MaxLength, Optional
    = true)]
  public string AmountInd4
  {
    get => amountInd4;
    set => amountInd4 = value != null
      ? TrimEnd(Substring(value, 1, AmountInd4_MaxLength)) : null;
  }

  /// <summary>
  /// The value of the AMOUNT_4 attribute.
  /// Income amount corresponding to the Document Code and Amount_ind_4.
  /// </summary>
  [JsonPropertyName("amount4")]
  [Member(Index = 18, Type = MemberType.Number, Length = 12, Optional = true)]
  public long? Amount4
  {
    get => amount4;
    set => amount4 = value;
  }

  /// <summary>Length of the AMOUNT_IND_5 attribute.</summary>
  public const int AmountInd5_MaxLength = 2;

  /// <summary>
  /// The value of the AMOUNT_IND_5 attribute.
  /// The document Indicator further describes the source of income identified 
  /// by the document code.
  /// </summary>
  [JsonPropertyName("amountInd5")]
  [Member(Index = 19, Type = MemberType.Char, Length = AmountInd5_MaxLength, Optional
    = true)]
  public string AmountInd5
  {
    get => amountInd5;
    set => amountInd5 = value != null
      ? TrimEnd(Substring(value, 1, AmountInd5_MaxLength)) : null;
  }

  /// <summary>
  /// The value of the AMOUNT_5 attribute.
  /// Income amount corresponding to the Document Code and Amount_ind_5.
  /// </summary>
  [JsonPropertyName("amount5")]
  [Member(Index = 20, Type = MemberType.Number, Length = 12, Optional = true)]
  public long? Amount5
  {
    get => amount5;
    set => amount5 = value;
  }

  /// <summary>Length of the AMOUNT_IND_6 attribute.</summary>
  public const int AmountInd6_MaxLength = 2;

  /// <summary>
  /// The value of the AMOUNT_IND_6 attribute.
  /// The document Indicator further describes the source of income identified 
  /// by the document code.
  /// </summary>
  [JsonPropertyName("amountInd6")]
  [Member(Index = 21, Type = MemberType.Char, Length = AmountInd6_MaxLength, Optional
    = true)]
  public string AmountInd6
  {
    get => amountInd6;
    set => amountInd6 = value != null
      ? TrimEnd(Substring(value, 1, AmountInd6_MaxLength)) : null;
  }

  /// <summary>
  /// The value of the AMOUNT 6 attribute.
  /// Income amount corresponding to the Document Code and Amount_ind_1.
  /// </summary>
  [JsonPropertyName("amount6")]
  [Member(Index = 22, Type = MemberType.Number, Length = 12, Optional = true)]
  public long? Amount6
  {
    get => amount6;
    set => amount6 = value;
  }

  /// <summary>Length of the AMOUNT IND 7 attribute.</summary>
  public const int AmountInd7_MaxLength = 2;

  /// <summary>
  /// The value of the AMOUNT IND 7 attribute.
  /// The document Indicator further describes the source of income identified 
  /// by the document code.
  /// </summary>
  [JsonPropertyName("amountInd7")]
  [Member(Index = 23, Type = MemberType.Char, Length = AmountInd7_MaxLength, Optional
    = true)]
  public string AmountInd7
  {
    get => amountInd7;
    set => amountInd7 = value != null
      ? TrimEnd(Substring(value, 1, AmountInd7_MaxLength)) : null;
  }

  /// <summary>
  /// The value of the AMOUNT 7 attribute.
  /// Income amount corresponding to the Document Code and Amount_ind_1.
  /// </summary>
  [JsonPropertyName("amount7")]
  [Member(Index = 24, Type = MemberType.Number, Length = 12, Optional = true)]
  public long? Amount7
  {
    get => amount7;
    set => amount7 = value;
  }

  /// <summary>Length of the AMOUNT IND 8 attribute.</summary>
  public const int AmountInd8_MaxLength = 2;

  /// <summary>
  /// The value of the AMOUNT IND 8 attribute.
  /// The document Indicator further describes the source of income identified 
  /// by the document code.
  /// </summary>
  [JsonPropertyName("amountInd8")]
  [Member(Index = 25, Type = MemberType.Char, Length = AmountInd8_MaxLength, Optional
    = true)]
  public string AmountInd8
  {
    get => amountInd8;
    set => amountInd8 = value != null
      ? TrimEnd(Substring(value, 1, AmountInd8_MaxLength)) : null;
  }

  /// <summary>
  /// The value of the AMOUNT 8 attribute.
  /// Income amount corresponding to the Document Code and Amount_ind_1.
  /// </summary>
  [JsonPropertyName("amount8")]
  [Member(Index = 26, Type = MemberType.Number, Length = 12, Optional = true)]
  public long? Amount8
  {
    get => amount8;
    set => amount8 = value;
  }

  /// <summary>Length of the AMOUNT IND 9 attribute.</summary>
  public const int AmountInd9_MaxLength = 2;

  /// <summary>
  /// The value of the AMOUNT IND 9 attribute.
  /// The document Indicator further describes the source of income identified 
  /// by the document code.
  /// </summary>
  [JsonPropertyName("amountInd9")]
  [Member(Index = 27, Type = MemberType.Char, Length = AmountInd9_MaxLength, Optional
    = true)]
  public string AmountInd9
  {
    get => amountInd9;
    set => amountInd9 = value != null
      ? TrimEnd(Substring(value, 1, AmountInd9_MaxLength)) : null;
  }

  /// <summary>
  /// The value of the AMOUNT 9 attribute.
  /// Income amount corresponding to the Document Code and Amount_ind_1.
  /// </summary>
  [JsonPropertyName("amount9")]
  [Member(Index = 28, Type = MemberType.Number, Length = 12, Optional = true)]
  public long? Amount9
  {
    get => amount9;
    set => amount9 = value;
  }

  /// <summary>Length of the AMOUNT IND 10 attribute.</summary>
  public const int AmountInd10_MaxLength = 2;

  /// <summary>
  /// The value of the AMOUNT IND 10 attribute.
  /// The document Indicator further describes the source of income identified 
  /// by the document code.
  /// </summary>
  [JsonPropertyName("amountInd10")]
  [Member(Index = 29, Type = MemberType.Char, Length = AmountInd10_MaxLength, Optional
    = true)]
  public string AmountInd10
  {
    get => amountInd10;
    set => amountInd10 = value != null
      ? TrimEnd(Substring(value, 1, AmountInd10_MaxLength)) : null;
  }

  /// <summary>
  /// The value of the AMOUNT 10 attribute.
  /// Income amount corresponding to the Document Code and Amount_ind_1.
  /// </summary>
  [JsonPropertyName("amount10")]
  [Member(Index = 30, Type = MemberType.Number, Length = 12, Optional = true)]
  public long? Amount10
  {
    get => amount10;
    set => amount10 = value;
  }

  /// <summary>Length of the AMOUNT IND 11 attribute.</summary>
  public const int AmountInd11_MaxLength = 2;

  /// <summary>
  /// The value of the AMOUNT IND 11 attribute.
  /// The document Indicator further describes the source of income identified 
  /// by the document code.
  /// </summary>
  [JsonPropertyName("amountInd11")]
  [Member(Index = 31, Type = MemberType.Char, Length = AmountInd11_MaxLength, Optional
    = true)]
  public string AmountInd11
  {
    get => amountInd11;
    set => amountInd11 = value != null
      ? TrimEnd(Substring(value, 1, AmountInd11_MaxLength)) : null;
  }

  /// <summary>
  /// The value of the AMOUNT 11 attribute.
  /// Income amount corresponding to the Document Code and Amount_ind_1.
  /// </summary>
  [JsonPropertyName("amount11")]
  [Member(Index = 32, Type = MemberType.Number, Length = 12, Optional = true)]
  public long? Amount11
  {
    get => amount11;
    set => amount11 = value;
  }

  /// <summary>Length of the AMOUNT IND 12 attribute.</summary>
  public const int AmountInd12_MaxLength = 2;

  /// <summary>
  /// The value of the AMOUNT IND 12 attribute.
  /// The document Indicator further describes the source of income identified 
  /// by the document code.
  /// </summary>
  [JsonPropertyName("amountInd12")]
  [Member(Index = 33, Type = MemberType.Char, Length = AmountInd12_MaxLength, Optional
    = true)]
  public string AmountInd12
  {
    get => amountInd12;
    set => amountInd12 = value != null
      ? TrimEnd(Substring(value, 1, AmountInd12_MaxLength)) : null;
  }

  /// <summary>
  /// The value of the AMOUNT 12 attribute.
  /// Income amount corresponding to the Document Code and Amount_ind_1.
  /// </summary>
  [JsonPropertyName("amount12")]
  [Member(Index = 34, Type = MemberType.Number, Length = 12, Optional = true)]
  public long? Amount12
  {
    get => amount12;
    set => amount12 = value;
  }

  /// <summary>Length of the CREATED_BY attribute.</summary>
  public const int CreatedBy_MaxLength = 8;

  /// <summary>
  /// The value of the CREATED_BY attribute.
  /// User ID or Program ID responsible for creation of the occurrence.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 35, Type = MemberType.Char, Length = CreatedBy_MaxLength)]
  public string CreatedBy
  {
    get => createdBy ?? "";
    set => createdBy = TrimEnd(Substring(value, 1, CreatedBy_MaxLength));
  }

  /// <summary>
  /// The json value of the CreatedBy attribute.</summary>
  [JsonPropertyName("createdBy")]
  [Computed]
  public string CreatedBy_Json
  {
    get => NullIf(CreatedBy, "");
    set => CreatedBy = value;
  }

  /// <summary>
  /// The value of the CREATED_TIMESTAMP attribute.
  /// Timestamp of creation of the occurrence.
  /// </summary>
  [JsonPropertyName("createdTimestamp")]
  [Member(Index = 36, Type = MemberType.Timestamp)]
  public DateTime? CreatedTimestamp
  {
    get => createdTimestamp;
    set => createdTimestamp = value;
  }

  /// <summary>Length of the LAST_UPDATED_BY attribute.</summary>
  public const int LastUpdatedBy_MaxLength = 8;

  /// <summary>
  /// The value of the LAST_UPDATED_BY attribute.
  /// User ID or Program ID responsible for the last update of the occurrence.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 37, Type = MemberType.Char, Length = LastUpdatedBy_MaxLength)]
  public string LastUpdatedBy
  {
    get => lastUpdatedBy ?? "";
    set => lastUpdatedBy =
      TrimEnd(Substring(value, 1, LastUpdatedBy_MaxLength));
  }

  /// <summary>
  /// The json value of the LastUpdatedBy attribute.</summary>
  [JsonPropertyName("lastUpdatedBy")]
  [Computed]
  public string LastUpdatedBy_Json
  {
    get => NullIf(LastUpdatedBy, "");
    set => LastUpdatedBy = value;
  }

  /// <summary>
  /// The value of the LAST_UPDATED_TIMESTAMP attribute.
  /// Timestamp of last update of the occurrence.
  /// </summary>
  [JsonPropertyName("lastUpdatedTimestamp")]
  [Member(Index = 38, Type = MemberType.Timestamp)]
  public DateTime? LastUpdatedTimestamp
  {
    get => lastUpdatedTimestamp;
    set => lastUpdatedTimestamp = value;
  }

  /// <summary>Length of the PAYEE_LINE_1 attribute.</summary>
  public const int PayeeLine1_MaxLength = 40;

  /// <summary>
  /// The value of the PAYEE_LINE_1 attribute.
  /// Returned by IRS.
  /// Payee's name on the 1099 form.
  /// </summary>
  [JsonPropertyName("payeeLine1")]
  [Member(Index = 39, Type = MemberType.Varchar, Length
    = PayeeLine1_MaxLength, Optional = true)]
  public string PayeeLine1
  {
    get => payeeLine1;
    set => payeeLine1 = value != null
      ? Substring(value, 1, PayeeLine1_MaxLength) : null;
  }

  /// <summary>Length of the PAYEE_LINE_2 attribute.</summary>
  public const int PayeeLine2_MaxLength = 40;

  /// <summary>
  /// The value of the PAYEE_LINE_2 attribute.
  /// Returned by IRS.
  /// Second name of a person or first line of address such as &quot;IN CARE OF
  /// &quot;. Could be blank.
  /// </summary>
  [JsonPropertyName("payeeLine2")]
  [Member(Index = 40, Type = MemberType.Varchar, Length
    = PayeeLine2_MaxLength, Optional = true)]
  public string PayeeLine2
  {
    get => payeeLine2;
    set => payeeLine2 = value != null
      ? Substring(value, 1, PayeeLine2_MaxLength) : null;
  }

  /// <summary>Length of the PAYEE_LINE_3 attribute.</summary>
  public const int PayeeLine3_MaxLength = 40;

  /// <summary>
  /// The value of the PAYEE_LINE_3 attribute.
  /// Returned by IRS.
  /// Street Address or Post Office Box Number or other address furnished by the
  /// 1099. Could be blank.
  /// </summary>
  [JsonPropertyName("payeeLine3")]
  [Member(Index = 41, Type = MemberType.Varchar, Length
    = PayeeLine3_MaxLength, Optional = true)]
  public string PayeeLine3
  {
    get => payeeLine3;
    set => payeeLine3 = value != null
      ? Substring(value, 1, PayeeLine3_MaxLength) : null;
  }

  /// <summary>Length of the PAYEE_LINE_4 attribute.</summary>
  public const int PayeeLine4_MaxLength = 40;

  /// <summary>
  /// The value of the PAYEE_LINE_4 attribute.
  /// Returned by IRS
  /// City, State and ZIP code supplied by the 1099.
  /// </summary>
  [JsonPropertyName("payeeLine4")]
  [Member(Index = 42, Type = MemberType.Varchar, Length
    = PayeeLine4_MaxLength, Optional = true)]
  public string PayeeLine4
  {
    get => payeeLine4;
    set => payeeLine4 = value != null
      ? Substring(value, 1, PayeeLine4_MaxLength) : null;
  }

  /// <summary>Length of the PAYER_LINE_1 attribute.</summary>
  public const int PayerLine1_MaxLength = 40;

  /// <summary>
  /// The value of the PAYER_LINE_1 attribute.
  /// Returned by IRS
  /// The Payer's name as shown on the 1099 form.
  /// </summary>
  [JsonPropertyName("payerLine1")]
  [Member(Index = 43, Type = MemberType.Varchar, Length
    = PayerLine1_MaxLength, Optional = true)]
  public string PayerLine1
  {
    get => payerLine1;
    set => payerLine1 = value != null
      ? Substring(value, 1, PayerLine1_MaxLength) : null;
  }

  /// <summary>Length of the PAYER_LINE_2 attribute.</summary>
  public const int PayerLine2_MaxLength = 40;

  /// <summary>
  /// The value of the PAYER_LINE_2 attribute.
  /// Returned by IRS
  /// The first line of street address as shown on the 1099 form. Could be 
  /// blank.
  /// </summary>
  [JsonPropertyName("payerLine2")]
  [Member(Index = 44, Type = MemberType.Varchar, Length
    = PayerLine2_MaxLength, Optional = true)]
  public string PayerLine2
  {
    get => payerLine2;
    set => payerLine2 = value != null
      ? Substring(value, 1, PayerLine2_MaxLength) : null;
  }

  /// <summary>Length of the PAYER_LINE_3 attribute.</summary>
  public const int PayerLine3_MaxLength = 40;

  /// <summary>
  /// The value of the PAYER_LINE_3 attribute.
  /// Returned by IRS
  /// The second line of the payer's street address as shown on the 1099 form. 
  /// Could be blank.
  /// </summary>
  [JsonPropertyName("payerLine3")]
  [Member(Index = 45, Type = MemberType.Varchar, Length
    = PayerLine3_MaxLength, Optional = true)]
  public string PayerLine3
  {
    get => payerLine3;
    set => payerLine3 = value != null
      ? Substring(value, 1, PayerLine3_MaxLength) : null;
  }

  /// <summary>Length of the PAYER_LINE_4 attribute.</summary>
  public const int PayerLine4_MaxLength = 40;

  /// <summary>
  /// The value of the PAYER_LINE_4 attribute.
  /// Returned by IRS
  /// City, State and ZIP code supplied by the 1099.
  /// </summary>
  [JsonPropertyName("payerLine4")]
  [Member(Index = 46, Type = MemberType.Varchar, Length
    = PayerLine4_MaxLength, Optional = true)]
  public string PayerLine4
  {
    get => payerLine4;
    set => payerLine4 = value != null
      ? Substring(value, 1, PayerLine4_MaxLength) : null;
  }

  /// <summary>
  /// The value of the IDENTIFIER attribute.
  /// The attribute, together with the relation to CSE_PERSON, uniquely 
  /// identifies one instance of 1099_TRANSACTION.
  /// </summary>
  [JsonPropertyName("lrqIdentifier")]
  [DefaultValue(0)]
  [Member(Index = 47, Type = MemberType.Number, Length = 3)]
  public int LrqIdentifier
  {
    get => lrqIdentifier;
    set => lrqIdentifier = value;
  }

  /// <summary>Length of the NUMBER attribute.</summary>
  public const int CspNumber_MaxLength = 10;

  /// <summary>
  /// The value of the NUMBER attribute.
  /// This is a system generated number which will be used by the users to 
  /// identify a person.  This will have a business meaning, but will be unique
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 48, Type = MemberType.Char, Length = CspNumber_MaxLength)]
  public string CspNumber
  {
    get => cspNumber ?? "";
    set => cspNumber = TrimEnd(Substring(value, 1, CspNumber_MaxLength));
  }

  /// <summary>
  /// The json value of the CspNumber attribute.</summary>
  [JsonPropertyName("cspNumber")]
  [Computed]
  public string CspNumber_Json
  {
    get => NullIf(CspNumber, "");
    set => CspNumber = value;
  }

  private int identifier;
  private DateTime? dateReceived;
  private string usageStatus;
  private DateTime? dateUsed;
  private string stateCode;
  private string zipCode;
  private string payerEin;
  private int? taxYear;
  private string payerAccountNo;
  private string documentCode;
  private string amountInd1;
  private long? amount1;
  private string amountInd2;
  private long? amount2;
  private string amountInd3;
  private long? amount3;
  private string amountInd4;
  private long? amount4;
  private string amountInd5;
  private long? amount5;
  private string amountInd6;
  private long? amount6;
  private string amountInd7;
  private long? amount7;
  private string amountInd8;
  private long? amount8;
  private string amountInd9;
  private long? amount9;
  private string amountInd10;
  private long? amount10;
  private string amountInd11;
  private long? amount11;
  private string amountInd12;
  private long? amount12;
  private string createdBy;
  private DateTime? createdTimestamp;
  private string lastUpdatedBy;
  private DateTime? lastUpdatedTimestamp;
  private string payeeLine1;
  private string payeeLine2;
  private string payeeLine3;
  private string payeeLine4;
  private string payerLine1;
  private string payerLine2;
  private string payerLine3;
  private string payerLine4;
  private int lrqIdentifier;
  private string cspNumber;
}
