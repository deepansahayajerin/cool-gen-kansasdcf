// The source file: EXTERNAL_AGENCY, ID: 371434297, model: 746.
using System;
using System.ComponentModel;
using System.Text.Json.Serialization;
using Bphx.Cool;

using static Bphx.Cool.Functions;

namespace Gov.Kansas.DCF.Cse.Entities;

/// <summary>
/// RESP: OBLGE
/// This entity describes external agencies like County Treasurer's offic which 
/// may be used for verification of assets etc.
/// </summary>
[Serializable]
public partial class ExternalAgency: View, ICloneable
{
  /// <summary>Default constructor.</summary>
  public ExternalAgency()
  {
  }

  /// <summary>Copy constructor.</summary>
  /// <param name="that">An instance to copy.</param>
  public ExternalAgency(ExternalAgency that)
  {
    Init(that);
    Assign(that);
  }

  /// <summary>Creates a copy of this object.</summary>
  /// <returns>A copy of this instance.</returns>
  public new ExternalAgency Clone() => new(this);

  /// <summary>Creates a copy of this object.</summary>
  /// <returns>A copy of this instance.</returns>
  object ICloneable.Clone() => Clone();

  /// <summary>Assigns value from another instance.</summary>
  /// <param name="that">Another instance.</param>
  public void Assign(ExternalAgency that)
  {
    base.Assign(that);
    lastUpdatedBy = that.lastUpdatedBy;
    lastUpdatdTstamp = that.lastUpdatdTstamp;
    createdBy = that.createdBy;
    createdTimestamp = that.createdTimestamp;
    identifier = that.identifier;
    typeCode = that.typeCode;
    name = that.name;
    phoneAreaCode = that.phoneAreaCode;
    phone = that.phone;
    faxAreaCode = that.faxAreaCode;
    fax = that.fax;
    effectiveDate = that.effectiveDate;
    discontinueDate = that.discontinueDate;
  }

  /// <summary>Length of the LAST_UPDATED_BY attribute.</summary>
  public const int LastUpdatedBy_MaxLength = 8;

  /// <summary>
  /// The value of the LAST_UPDATED_BY attribute.
  /// The user id or program id responsible for the last update to the 
  /// occurrence.
  /// </summary>
  [JsonPropertyName("lastUpdatedBy")]
  [Member(Index = 1, Type = MemberType.Char, Length = LastUpdatedBy_MaxLength, Optional
    = true)]
  public string LastUpdatedBy
  {
    get => lastUpdatedBy;
    set => lastUpdatedBy = value != null
      ? TrimEnd(Substring(value, 1, LastUpdatedBy_MaxLength)) : null;
  }

  /// <summary>
  /// The value of the LAST_UPDATD_TSTAMP attribute.
  /// The timestamp of the most recent update to the entity occurence.
  /// </summary>
  [JsonPropertyName("lastUpdatdTstamp")]
  [Member(Index = 2, Type = MemberType.Timestamp, Optional = true)]
  public DateTime? LastUpdatdTstamp
  {
    get => lastUpdatdTstamp;
    set => lastUpdatdTstamp = value;
  }

  /// <summary>Length of the CREATED_BY attribute.</summary>
  public const int CreatedBy_MaxLength = 8;

  /// <summary>
  /// The value of the CREATED_BY attribute.
  /// The user id or program id responsible for the creation of the occurrence.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 3, Type = MemberType.Char, Length = CreatedBy_MaxLength)]
  public string CreatedBy
  {
    get => createdBy ?? "";
    set => createdBy = TrimEnd(Substring(value, 1, CreatedBy_MaxLength));
  }

  /// <summary>
  /// The json value of the CreatedBy attribute.</summary>
  [JsonPropertyName("createdBy")]
  [Computed]
  public string CreatedBy_Json
  {
    get => NullIf(CreatedBy, "");
    set => CreatedBy = value;
  }

  /// <summary>
  /// The value of the CREATED_TIMESTAMP attribute.
  /// The timestamp of when the occurrence of the entity was created.
  /// </summary>
  [JsonPropertyName("createdTimestamp")]
  [Member(Index = 4, Type = MemberType.Timestamp)]
  public DateTime? CreatedTimestamp
  {
    get => createdTimestamp;
    set => createdTimestamp = value;
  }

  /// <summary>
  /// The value of the IDENTIFIER attribute.
  /// This attributes uniquely identifies an occurrence of the entity type. It 
  /// is automatically generated by the system.
  /// </summary>
  [JsonPropertyName("identifier")]
  [DefaultValue(0)]
  [Member(Index = 5, Type = MemberType.Number, Length = 9)]
  public int Identifier
  {
    get => identifier;
    set => identifier = value;
  }

  /// <summary>Length of the TYPE_CODE attribute.</summary>
  public const int TypeCode_MaxLength = 8;

  /// <summary>
  /// The value of the TYPE_CODE attribute.
  /// This attributes specifies the type of external agency. The valid values 
  /// are maintained in CODE_VALUE entity.
  /// </summary>
  [JsonPropertyName("typeCode")]
  [Member(Index = 6, Type = MemberType.Char, Length = TypeCode_MaxLength, Optional
    = true)]
  public string TypeCode
  {
    get => typeCode;
    set => typeCode = value != null
      ? TrimEnd(Substring(value, 1, TypeCode_MaxLength)) : null;
  }

  /// <summary>Length of the NAME attribute.</summary>
  public const int Name_MaxLength = 30;

  /// <summary>
  /// The value of the NAME attribute.
  /// This attributes specifies the name of the external agency.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 7, Type = MemberType.Char, Length = Name_MaxLength)]
  public string Name
  {
    get => name ?? "";
    set => name = TrimEnd(Substring(value, 1, Name_MaxLength));
  }

  /// <summary>
  /// The json value of the Name attribute.</summary>
  [JsonPropertyName("name")]
  [Computed]
  public string Name_Json
  {
    get => NullIf(Name, "");
    set => Name = value;
  }

  /// <summary>
  /// The value of the PHONE_AREA_CODE attribute.
  /// This attribute specifies the 3-digit area code of the main phone number of
  /// the external agency.
  /// </summary>
  [JsonPropertyName("phoneAreaCode")]
  [Member(Index = 8, Type = MemberType.Number, Length = 3, Optional = true)]
  public int? PhoneAreaCode
  {
    get => phoneAreaCode;
    set => phoneAreaCode = value;
  }

  /// <summary>
  /// The value of the PHONE attribute.
  /// This attribute specifies the main phone number of the external agency.
  /// </summary>
  [JsonPropertyName("phone")]
  [Member(Index = 9, Type = MemberType.Number, Length = 7, Optional = true)]
  public int? Phone
  {
    get => phone;
    set => phone = value;
  }

  /// <summary>
  /// The value of the FAX_AREA_CODE attribute.
  /// This attributes specifies the 3-digit area code of the main fax number of 
  /// the external agency.
  /// </summary>
  [JsonPropertyName("faxAreaCode")]
  [Member(Index = 10, Type = MemberType.Number, Length = 3, Optional = true)]
  public int? FaxAreaCode
  {
    get => faxAreaCode;
    set => faxAreaCode = value;
  }

  /// <summary>
  /// The value of the FAX attribute.
  /// This attribute specefies the main fax number of the external agency.
  /// </summary>
  [JsonPropertyName("fax")]
  [Member(Index = 11, Type = MemberType.Number, Length = 3, Optional = true)]
  public int? Fax
  {
    get => fax;
    set => fax = value;
  }

  /// <summary>
  /// The value of the EFFECTIVE_DATE attribute.
  /// This attribute specifies the starting date from and including which the 
  /// details are valid / active.
  /// </summary>
  [JsonPropertyName("effectiveDate")]
  [Member(Index = 12, Type = MemberType.Date, Optional = true)]
  public DateTime? EffectiveDate
  {
    get => effectiveDate;
    set => effectiveDate = value;
  }

  /// <summary>
  /// The value of the DISCONTINUE_DATE attribute.
  /// This attribute specifies the date up to and including which the details 
  /// are valid / active.
  /// </summary>
  [JsonPropertyName("discontinueDate")]
  [Member(Index = 13, Type = MemberType.Date, Optional = true)]
  public DateTime? DiscontinueDate
  {
    get => discontinueDate;
    set => discontinueDate = value;
  }

  private string lastUpdatedBy;
  private DateTime? lastUpdatdTstamp;
  private string createdBy;
  private DateTime? createdTimestamp;
  private int identifier;
  private string typeCode;
  private string name;
  private int? phoneAreaCode;
  private int? phone;
  private int? faxAreaCode;
  private int? fax;
  private DateTime? effectiveDate;
  private DateTime? discontinueDate;
}
