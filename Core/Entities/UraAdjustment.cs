// The source file: URA_ADJUSTMENT, ID: 371440444, model: 746.
using System;
using System.ComponentModel;
using System.Text.Json.Serialization;
using Bphx.Cool;

using static Bphx.Cool.Functions;

namespace Gov.Kansas.DCF.Cse.Entities;

/// <summary>
/// RESP: OBLGE
/// This entity contains the adjustments to the URA. Each occurrence of this 
/// entity type contains one adjustment transaction created for the IM HOUSEHOLD
/// MEMBER. The adjustment records can only be created. They cannot be updated
/// or deleted. The adjustments can be positive or negative. The net URA
/// adjustment for each URA component field is given by the (algebraic) sum of
/// that field of all the adjustment records for the im_household_member.
/// </summary>
[Serializable]
public partial class UraAdjustment: View, ICloneable
{
  /// <summary>Default constructor.</summary>
  public UraAdjustment()
  {
  }

  /// <summary>Copy constructor.</summary>
  /// <param name="that">An instance to copy.</param>
  public UraAdjustment(UraAdjustment that)
  {
    Init(that);
    Assign(that);
  }

  /// <summary>Creates a copy of this object.</summary>
  /// <returns>A copy of this instance.</returns>
  public new UraAdjustment Clone() => new(this);

  /// <summary>Creates a copy of this object.</summary>
  /// <returns>A copy of this instance.</returns>
  object ICloneable.Clone() => Clone();

  /// <summary>Assigns value from another instance.</summary>
  /// <param name="that">Another instance.</param>
  public void Assign(UraAdjustment that)
  {
    base.Assign(that);
    identifier = that.identifier;
    adjYear = that.adjYear;
    adjMonth = that.adjMonth;
    adjAdcGrant = that.adjAdcGrant;
    adjPassthru = that.adjPassthru;
    adjMedAssistance = that.adjMedAssistance;
    adjFcGrant = that.adjFcGrant;
    adjReason = that.adjReason;
    createdBy = that.createdBy;
    createdTstamp = that.createdTstamp;
    adjHouseholdUra = that.adjHouseholdUra;
    adjHholdMedicalUra = that.adjHholdMedicalUra;
    ihmStartDate = that.ihmStartDate;
    imhAeCaseNo = that.imhAeCaseNo;
    cspNumber = that.cspNumber;
  }

  /// <summary>
  /// The value of the IDENTIFIER attribute.
  /// This attribute together with the relationship to IM_HOUSEHOLD_MEMBER 
  /// uniquely identifies one occurrence of the entity type. The value of this
  /// attribute is automatically generated by the system sequentially starting
  /// from 1 for each IM_HOUSEHOLD_MEMBER.
  /// </summary>
  [JsonPropertyName("identifier")]
  [DefaultValue(0)]
  [Member(Index = 1, Type = MemberType.Number, Length = 6)]
  public int Identifier
  {
    get => identifier;
    set => identifier = value;
  }

  /// <summary>
  /// The value of the ADJ_YEAR attribute.
  /// This attribute specified the year for which the adjustment record is 
  /// created.
  /// </summary>
  [JsonPropertyName("adjYear")]
  [DefaultValue(0)]
  [Member(Index = 2, Type = MemberType.Number, Length = 4)]
  public int AdjYear
  {
    get => adjYear;
    set => adjYear = value;
  }

  /// <summary>
  /// The value of the ADJ_MONTH attribute.
  /// This attribute specifies the month for which the adjustment record is 
  /// being created.
  /// </summary>
  [JsonPropertyName("adjMonth")]
  [DefaultValue(0)]
  [Member(Index = 3, Type = MemberType.Number, Length = 2)]
  public int AdjMonth
  {
    get => adjMonth;
    set => adjMonth = value;
  }

  /// <summary>
  /// The value of the ADJ_ADC_GRANT attribute.
  /// This attribute specifies the adjustment to the ADC grant amount for the 
  /// specified year and month and the specified IM HOUSEHOLD MEMBER. The
  /// adjustment can be either positive or negative.	
  /// </summary>
  [JsonPropertyName("adjAdcGrant")]
  [Member(Index = 4, Type = MemberType.Number, Length = 11, Precision = 2, Optional
    = true)]
  public decimal? AdjAdcGrant
  {
    get => adjAdcGrant;
    set => adjAdcGrant = value != null ? Truncate(value, 2) : null;
  }

  /// <summary>
  /// The value of the ADJ_PASSTHRU attribute.
  /// This attribute specifies the adjustment to the passthru amount for the 
  /// specified year and month and the specified IM HOUSEHOLD MEMBER. The
  /// adjustment can be either positive or negative.
  /// </summary>
  [JsonPropertyName("adjPassthru")]
  [Member(Index = 5, Type = MemberType.Number, Length = 11, Precision = 2, Optional
    = true)]
  public decimal? AdjPassthru
  {
    get => adjPassthru;
    set => adjPassthru = value != null ? Truncate(value, 2) : null;
  }

  /// <summary>
  /// The value of the ADJ_MED_ASSISTANCE attribute.
  /// This attribute specifies the adjustment to the medical assistance amount 
  /// for the specified year and month and the specified IM_HOUSEHOLD_MEMBER.
  /// The adjustment can be either positive or negative.
  /// </summary>
  [JsonPropertyName("adjMedAssistance")]
  [Member(Index = 6, Type = MemberType.Number, Length = 11, Precision = 2, Optional
    = true)]
  public decimal? AdjMedAssistance
  {
    get => adjMedAssistance;
    set => adjMedAssistance = value != null ? Truncate(value, 2) : null;
  }

  /// <summary>
  /// The value of the ADJ_FC_GRANT attribute.
  /// This attribute specifies the adjustment to the ADC fostercare grant amount
  /// for the specified year and month and the specified IM_HOUSEHOLD_MEMBER.
  /// The adjustment can be either positive or negative.
  /// </summary>
  [JsonPropertyName("adjFcGrant")]
  [Member(Index = 7, Type = MemberType.Number, Length = 11, Precision = 2, Optional
    = true)]
  public decimal? AdjFcGrant
  {
    get => adjFcGrant;
    set => adjFcGrant = value != null ? Truncate(value, 2) : null;
  }

  /// <summary>Length of the ADJ_REASON attribute.</summary>
  public const int AdjReason_MaxLength = 240;

  /// <summary>
  /// The value of the ADJ_REASON attribute.
  /// This attribute specifies the reason for the adjustment. This is a 
  /// narrative text.
  /// </summary>
  [JsonPropertyName("adjReason")]
  [Member(Index = 8, Type = MemberType.Char, Length = AdjReason_MaxLength, Optional
    = true)]
  public string AdjReason
  {
    get => adjReason;
    set => adjReason = value != null
      ? TrimEnd(Substring(value, 1, AdjReason_MaxLength)) : null;
  }

  /// <summary>Length of the CREATED_BY attribute.</summary>
  public const int CreatedBy_MaxLength = 8;

  /// <summary>
  /// The value of the CREATED_BY attribute.
  /// This attribute specifies the logon user id of the worker who created this 
  /// adjustment record.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 9, Type = MemberType.Char, Length = CreatedBy_MaxLength)]
  public string CreatedBy
  {
    get => createdBy ?? "";
    set => createdBy = TrimEnd(Substring(value, 1, CreatedBy_MaxLength));
  }

  /// <summary>
  /// The json value of the CreatedBy attribute.</summary>
  [JsonPropertyName("createdBy")]
  [Computed]
  public string CreatedBy_Json
  {
    get => NullIf(CreatedBy, "");
    set => CreatedBy = value;
  }

  /// <summary>
  /// The value of the CREATED_TSTAMP attribute.
  /// This attribute specifies the time at which the adjustment record was 
  /// created. It is automatically set by the system to the current system time
  /// value.
  /// </summary>
  [JsonPropertyName("createdTstamp")]
  [Member(Index = 10, Type = MemberType.Timestamp)]
  public DateTime? CreatedTstamp
  {
    get => createdTstamp;
    set => createdTstamp = value;
  }

  /// <summary>
  /// The value of the ADJ_HOUSEHOLD_URA attribute.
  /// This attribute specifies the adjustment to the household URA for the 
  /// specified year and month.  This should be specified against the AR.  This
  /// is the field the worker should use to apply any excess collection to
  /// another household's URA.  (The collections cannot be adjusted in the
  /// Finance business area if the obligor has paid the exact obligated amount).
  /// The adjustment can be either positive or negative.
  /// </summary>
  [JsonPropertyName("adjHouseholdUra")]
  [Member(Index = 11, Type = MemberType.Number, Length = 11, Precision = 2, Optional
    = true)]
  public decimal? AdjHouseholdUra
  {
    get => adjHouseholdUra;
    set => adjHouseholdUra = value != null ? Truncate(value, 2) : null;
  }

  /// <summary>
  /// The value of the ADJ_HHOLD_MEDICAL_URA attribute.
  /// This attribute specifies the adjustment to the household medical URA  for 
  /// the specified year and month.  This should be specified against the AR.
  /// This is the field the worker should use to apply any excess medical
  /// collection to another household's medical URA. (The collection cannot be
  /// adjusted in the Finance business area if the obligor has paid the exact
  /// obligated amount).
  /// The adjustment can be either positive or negative.
  /// </summary>
  [JsonPropertyName("adjHholdMedicalUra")]
  [Member(Index = 12, Type = MemberType.Number, Length = 7, Precision = 2, Optional
    = true)]
  public decimal? AdjHholdMedicalUra
  {
    get => adjHholdMedicalUra;
    set => adjHholdMedicalUra = value != null ? Truncate(value, 2) : null;
  }

  /// <summary>
  /// The value of the START_DATE attribute.
  /// This attribute defines the date on which the participation of the CSE 
  /// Person started on an ADC program in the IM Household.
  /// </summary>
  [JsonPropertyName("ihmStartDate")]
  [Member(Index = 13, Type = MemberType.Date)]
  public DateTime? IhmStartDate
  {
    get => ihmStartDate;
    set => ihmStartDate = value;
  }

  /// <summary>Length of the AE_CASE_NO attribute.</summary>
  public const int ImhAeCaseNo_MaxLength = 8;

  /// <summary>
  /// The value of the AE_CASE_NO attribute.
  /// This attribute defines the AE Case No for the IM Household.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 14, Type = MemberType.Char, Length = ImhAeCaseNo_MaxLength)]
  public string ImhAeCaseNo
  {
    get => imhAeCaseNo ?? "";
    set => imhAeCaseNo = TrimEnd(Substring(value, 1, ImhAeCaseNo_MaxLength));
  }

  /// <summary>
  /// The json value of the ImhAeCaseNo attribute.</summary>
  [JsonPropertyName("imhAeCaseNo")]
  [Computed]
  public string ImhAeCaseNo_Json
  {
    get => NullIf(ImhAeCaseNo, "");
    set => ImhAeCaseNo = value;
  }

  /// <summary>Length of the NUMBER attribute.</summary>
  public const int CspNumber_MaxLength = 10;

  /// <summary>
  /// The value of the NUMBER attribute.
  /// This is a system generated number which will be used by the users to 
  /// identify a person.  This will have a business meaning, but will be unique
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 15, Type = MemberType.Char, Length = CspNumber_MaxLength)]
  public string CspNumber
  {
    get => cspNumber ?? "";
    set => cspNumber = TrimEnd(Substring(value, 1, CspNumber_MaxLength));
  }

  /// <summary>
  /// The json value of the CspNumber attribute.</summary>
  [JsonPropertyName("cspNumber")]
  [Computed]
  public string CspNumber_Json
  {
    get => NullIf(CspNumber, "");
    set => CspNumber = value;
  }

  private int identifier;
  private int adjYear;
  private int adjMonth;
  private decimal? adjAdcGrant;
  private decimal? adjPassthru;
  private decimal? adjMedAssistance;
  private decimal? adjFcGrant;
  private string adjReason;
  private string createdBy;
  private DateTime? createdTstamp;
  private decimal? adjHouseholdUra;
  private decimal? adjHholdMedicalUra;
  private DateTime? ihmStartDate;
  private string imhAeCaseNo;
  private string cspNumber;
}
