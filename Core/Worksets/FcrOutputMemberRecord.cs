// The source file: FCR_OUTPUT_MEMBER_RECORD, ID: 374577123, model: 746.
using System;
using System.ComponentModel;
using System.Text.Json.Serialization;
using Bphx.Cool;

using static Bphx.Cool.Functions;

namespace Gov.Kansas.DCF.Cse.Worksets;

/// <summary>
/// Record Layout for FCR Extract File and this layout will be used to read the 
/// FCR extract dataset generated by CSE application (SWEEB411).  This workset
/// contains all the case member record attribute.
/// </summary>
[Serializable]
public partial class FcrOutputMemberRecord: View, ICloneable
{
  /// <summary>Default constructor.</summary>
  public FcrOutputMemberRecord()
  {
  }

  /// <summary>Copy constructor.</summary>
  /// <param name="that">An instance to copy.</param>
  public FcrOutputMemberRecord(FcrOutputMemberRecord that)
  {
    Init(that);
    Assign(that);
  }

  /// <summary>Creates a copy of this object.</summary>
  /// <returns>A copy of this instance.</returns>
  public new FcrOutputMemberRecord Clone() => new(this);

  /// <summary>Creates a copy of this object.</summary>
  /// <returns>A copy of this instance.</returns>
  object ICloneable.Clone() => Clone();

  /// <summary>Assigns value from another instance.</summary>
  /// <param name="that">Another instance.</param>
  public void Assign(FcrOutputMemberRecord that)
  {
    base.Assign(that);
    recordId = that.recordId;
    actionTypeCode = that.actionTypeCode;
    caseId = that.caseId;
    fcrProcessingFld1 = that.fcrProcessingFld1;
    userField = that.userField;
    fipsCountyCode = that.fipsCountyCode;
    fcrProcessingFld2 = that.fcrProcessingFld2;
    locateReqType = that.locateReqType;
    bundleResults = that.bundleResults;
    participantType = that.participantType;
    familyViolence = that.familyViolence;
    memberId = that.memberId;
    sexCode = that.sexCode;
    dateOfBirth = that.dateOfBirth;
    ssn = that.ssn;
    previousSsn = that.previousSsn;
    firstName = that.firstName;
    middleName = that.middleName;
    lastName = that.lastName;
    cityOfBirth = that.cityOfBirth;
    stateCntyBirth = that.stateCntyBirth;
    fathersFirstName = that.fathersFirstName;
    fathersMidName = that.fathersMidName;
    fathersLastName = that.fathersLastName;
    mothersFirstName = that.mothersFirstName;
    mothersMidName = that.mothersMidName;
    mothersLastName = that.mothersLastName;
    irsUSsn = that.irsUSsn;
    additionalSsn1 = that.additionalSsn1;
    additionalSsn2 = that.additionalSsn2;
    additionalFnam1 = that.additionalFnam1;
    additionalMnam1 = that.additionalMnam1;
    additionalLnam1 = that.additionalLnam1;
    additionalFnam2 = that.additionalFnam2;
    additionalMnam2 = that.additionalMnam2;
    additionalLnam2 = that.additionalLnam2;
    additionalFnam3 = that.additionalFnam3;
    additionalMnam3 = that.additionalMnam3;
    additionalLnam3 = that.additionalLnam3;
    additionalFnam4 = that.additionalFnam4;
    additionalMnam4 = that.additionalMnam4;
    additionalLnam4 = that.additionalLnam4;
    newMemberId = that.newMemberId;
    irs1099 = that.irs1099;
    locateSource1 = that.locateSource1;
    locateSource2 = that.locateSource2;
    locateSource3 = that.locateSource3;
    locateSource4 = that.locateSource4;
    locateSource5 = that.locateSource5;
    locateSource6 = that.locateSource6;
    locateSource7 = that.locateSource7;
    locateSource8 = that.locateSource8;
  }

  /// <summary>Length of the RECORD_ID attribute.</summary>
  public const int RecordId_MaxLength = 2;

  /// <summary>
  /// The value of the RECORD_ID attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 1, Type = MemberType.Char, Length = RecordId_MaxLength)]
  public string RecordId
  {
    get => recordId ?? "";
    set => recordId = TrimEnd(Substring(value, 1, RecordId_MaxLength));
  }

  /// <summary>
  /// The json value of the RecordId attribute.</summary>
  [JsonPropertyName("recordId")]
  [Computed]
  public string RecordId_Json
  {
    get => NullIf(RecordId, "");
    set => RecordId = value;
  }

  /// <summary>Length of the ACTION_TYPE_CODE attribute.</summary>
  public const int ActionTypeCode_MaxLength = 1;

  /// <summary>
  /// The value of the ACTION_TYPE_CODE attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 2, Type = MemberType.Char, Length = ActionTypeCode_MaxLength)]
  public string ActionTypeCode
  {
    get => actionTypeCode ?? "";
    set => actionTypeCode =
      TrimEnd(Substring(value, 1, ActionTypeCode_MaxLength));
  }

  /// <summary>
  /// The json value of the ActionTypeCode attribute.</summary>
  [JsonPropertyName("actionTypeCode")]
  [Computed]
  public string ActionTypeCode_Json
  {
    get => NullIf(ActionTypeCode, "");
    set => ActionTypeCode = value;
  }

  /// <summary>Length of the CASE_ID attribute.</summary>
  public const int CaseId_MaxLength = 10;

  /// <summary>
  /// The value of the CASE_ID attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 3, Type = MemberType.Char, Length = CaseId_MaxLength)]
  public string CaseId
  {
    get => caseId ?? "";
    set => caseId = TrimEnd(Substring(value, 1, CaseId_MaxLength));
  }

  /// <summary>
  /// The json value of the CaseId attribute.</summary>
  [JsonPropertyName("caseId")]
  [Computed]
  public string CaseId_Json
  {
    get => NullIf(CaseId, "");
    set => CaseId = value;
  }

  /// <summary>Length of the FCR_PROCESSING_FLD1 attribute.</summary>
  public const int FcrProcessingFld1_MaxLength = 2;

  /// <summary>
  /// The value of the FCR_PROCESSING_FLD1 attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 4, Type = MemberType.Char, Length
    = FcrProcessingFld1_MaxLength)]
  public string FcrProcessingFld1
  {
    get => fcrProcessingFld1 ?? "";
    set => fcrProcessingFld1 =
      TrimEnd(Substring(value, 1, FcrProcessingFld1_MaxLength));
  }

  /// <summary>
  /// The json value of the FcrProcessingFld1 attribute.</summary>
  [JsonPropertyName("fcrProcessingFld1")]
  [Computed]
  public string FcrProcessingFld1_Json
  {
    get => NullIf(FcrProcessingFld1, "");
    set => FcrProcessingFld1 = value;
  }

  /// <summary>Length of the USER_FIELD attribute.</summary>
  public const int UserField_MaxLength = 15;

  /// <summary>
  /// The value of the USER_FIELD attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 5, Type = MemberType.Char, Length = UserField_MaxLength)]
  public string UserField
  {
    get => userField ?? "";
    set => userField = TrimEnd(Substring(value, 1, UserField_MaxLength));
  }

  /// <summary>
  /// The json value of the UserField attribute.</summary>
  [JsonPropertyName("userField")]
  [Computed]
  public string UserField_Json
  {
    get => NullIf(UserField, "");
    set => UserField = value;
  }

  /// <summary>Length of the FIPS_COUNTY_CODE attribute.</summary>
  public const int FipsCountyCode_MaxLength = 3;

  /// <summary>
  /// The value of the FIPS_COUNTY_CODE attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 6, Type = MemberType.Char, Length = FipsCountyCode_MaxLength)]
  public string FipsCountyCode
  {
    get => fipsCountyCode ?? "";
    set => fipsCountyCode =
      TrimEnd(Substring(value, 1, FipsCountyCode_MaxLength));
  }

  /// <summary>
  /// The json value of the FipsCountyCode attribute.</summary>
  [JsonPropertyName("fipsCountyCode")]
  [Computed]
  public string FipsCountyCode_Json
  {
    get => NullIf(FipsCountyCode, "");
    set => FipsCountyCode = value;
  }

  /// <summary>Length of the FCR_PROCESSING_FLD2 attribute.</summary>
  public const int FcrProcessingFld2_MaxLength = 2;

  /// <summary>
  /// The value of the FCR_PROCESSING_FLD2 attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 7, Type = MemberType.Char, Length
    = FcrProcessingFld2_MaxLength)]
  public string FcrProcessingFld2
  {
    get => fcrProcessingFld2 ?? "";
    set => fcrProcessingFld2 =
      TrimEnd(Substring(value, 1, FcrProcessingFld2_MaxLength));
  }

  /// <summary>
  /// The json value of the FcrProcessingFld2 attribute.</summary>
  [JsonPropertyName("fcrProcessingFld2")]
  [Computed]
  public string FcrProcessingFld2_Json
  {
    get => NullIf(FcrProcessingFld2, "");
    set => FcrProcessingFld2 = value;
  }

  /// <summary>Length of the LOCATE_REQ_TYPE attribute.</summary>
  public const int LocateReqType_MaxLength = 2;

  /// <summary>
  /// The value of the LOCATE_REQ_TYPE attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 8, Type = MemberType.Char, Length = LocateReqType_MaxLength)]
  public string LocateReqType
  {
    get => locateReqType ?? "";
    set => locateReqType =
      TrimEnd(Substring(value, 1, LocateReqType_MaxLength));
  }

  /// <summary>
  /// The json value of the LocateReqType attribute.</summary>
  [JsonPropertyName("locateReqType")]
  [Computed]
  public string LocateReqType_Json
  {
    get => NullIf(LocateReqType, "");
    set => LocateReqType = value;
  }

  /// <summary>Length of the BUNDLE_RESULTS attribute.</summary>
  public const int BundleResults_MaxLength = 1;

  /// <summary>
  /// The value of the BUNDLE_RESULTS attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 9, Type = MemberType.Char, Length = BundleResults_MaxLength)]
  public string BundleResults
  {
    get => bundleResults ?? "";
    set => bundleResults =
      TrimEnd(Substring(value, 1, BundleResults_MaxLength));
  }

  /// <summary>
  /// The json value of the BundleResults attribute.</summary>
  [JsonPropertyName("bundleResults")]
  [Computed]
  public string BundleResults_Json
  {
    get => NullIf(BundleResults, "");
    set => BundleResults = value;
  }

  /// <summary>Length of the PARTICIPANT_TYPE attribute.</summary>
  public const int ParticipantType_MaxLength = 2;

  /// <summary>
  /// The value of the PARTICIPANT_TYPE attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 10, Type = MemberType.Char, Length = ParticipantType_MaxLength)
    ]
  public string ParticipantType
  {
    get => participantType ?? "";
    set => participantType =
      TrimEnd(Substring(value, 1, ParticipantType_MaxLength));
  }

  /// <summary>
  /// The json value of the ParticipantType attribute.</summary>
  [JsonPropertyName("participantType")]
  [Computed]
  public string ParticipantType_Json
  {
    get => NullIf(ParticipantType, "");
    set => ParticipantType = value;
  }

  /// <summary>Length of the FAMILY_VIOLENCE attribute.</summary>
  public const int FamilyViolence_MaxLength = 2;

  /// <summary>
  /// The value of the FAMILY_VIOLENCE attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 11, Type = MemberType.Char, Length = FamilyViolence_MaxLength)]
    
  public string FamilyViolence
  {
    get => familyViolence ?? "";
    set => familyViolence =
      TrimEnd(Substring(value, 1, FamilyViolence_MaxLength));
  }

  /// <summary>
  /// The json value of the FamilyViolence attribute.</summary>
  [JsonPropertyName("familyViolence")]
  [Computed]
  public string FamilyViolence_Json
  {
    get => NullIf(FamilyViolence, "");
    set => FamilyViolence = value;
  }

  /// <summary>Length of the MEMBER_ID attribute.</summary>
  public const int MemberId_MaxLength = 10;

  /// <summary>
  /// The value of the MEMBER_ID attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 12, Type = MemberType.Char, Length = MemberId_MaxLength)]
  public string MemberId
  {
    get => memberId ?? "";
    set => memberId = TrimEnd(Substring(value, 1, MemberId_MaxLength));
  }

  /// <summary>
  /// The json value of the MemberId attribute.</summary>
  [JsonPropertyName("memberId")]
  [Computed]
  public string MemberId_Json
  {
    get => NullIf(MemberId, "");
    set => MemberId = value;
  }

  /// <summary>Length of the SEX_CODE attribute.</summary>
  public const int SexCode_MaxLength = 1;

  /// <summary>
  /// The value of the SEX_CODE attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 13, Type = MemberType.Char, Length = SexCode_MaxLength)]
  public string SexCode
  {
    get => sexCode ?? "";
    set => sexCode = TrimEnd(Substring(value, 1, SexCode_MaxLength));
  }

  /// <summary>
  /// The json value of the SexCode attribute.</summary>
  [JsonPropertyName("sexCode")]
  [Computed]
  public string SexCode_Json
  {
    get => NullIf(SexCode, "");
    set => SexCode = value;
  }

  /// <summary>Length of the DATE_OF_BIRTH attribute.</summary>
  public const int DateOfBirth_MaxLength = 8;

  /// <summary>
  /// The value of the DATE_OF_BIRTH attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 14, Type = MemberType.Char, Length = DateOfBirth_MaxLength)]
  public string DateOfBirth
  {
    get => dateOfBirth ?? "";
    set => dateOfBirth = TrimEnd(Substring(value, 1, DateOfBirth_MaxLength));
  }

  /// <summary>
  /// The json value of the DateOfBirth attribute.</summary>
  [JsonPropertyName("dateOfBirth")]
  [Computed]
  public string DateOfBirth_Json
  {
    get => NullIf(DateOfBirth, "");
    set => DateOfBirth = value;
  }

  /// <summary>Length of the SSN attribute.</summary>
  public const int Ssn_MaxLength = 9;

  /// <summary>
  /// The value of the SSN attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 15, Type = MemberType.Char, Length = Ssn_MaxLength)]
  public string Ssn
  {
    get => ssn ?? "";
    set => ssn = TrimEnd(Substring(value, 1, Ssn_MaxLength));
  }

  /// <summary>
  /// The json value of the Ssn attribute.</summary>
  [JsonPropertyName("ssn")]
  [Computed]
  public string Ssn_Json
  {
    get => NullIf(Ssn, "");
    set => Ssn = value;
  }

  /// <summary>Length of the PREVIOUS_SSN attribute.</summary>
  public const int PreviousSsn_MaxLength = 9;

  /// <summary>
  /// The value of the PREVIOUS_SSN attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 16, Type = MemberType.Char, Length = PreviousSsn_MaxLength)]
  public string PreviousSsn
  {
    get => previousSsn ?? "";
    set => previousSsn = TrimEnd(Substring(value, 1, PreviousSsn_MaxLength));
  }

  /// <summary>
  /// The json value of the PreviousSsn attribute.</summary>
  [JsonPropertyName("previousSsn")]
  [Computed]
  public string PreviousSsn_Json
  {
    get => NullIf(PreviousSsn, "");
    set => PreviousSsn = value;
  }

  /// <summary>Length of the FIRST_NAME attribute.</summary>
  public const int FirstName_MaxLength = 16;

  /// <summary>
  /// The value of the FIRST_NAME attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 17, Type = MemberType.Char, Length = FirstName_MaxLength)]
  public string FirstName
  {
    get => firstName ?? "";
    set => firstName = TrimEnd(Substring(value, 1, FirstName_MaxLength));
  }

  /// <summary>
  /// The json value of the FirstName attribute.</summary>
  [JsonPropertyName("firstName")]
  [Computed]
  public string FirstName_Json
  {
    get => NullIf(FirstName, "");
    set => FirstName = value;
  }

  /// <summary>Length of the MIDDLE_NAME attribute.</summary>
  public const int MiddleName_MaxLength = 16;

  /// <summary>
  /// The value of the MIDDLE_NAME attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 18, Type = MemberType.Char, Length = MiddleName_MaxLength)]
  public string MiddleName
  {
    get => middleName ?? "";
    set => middleName = TrimEnd(Substring(value, 1, MiddleName_MaxLength));
  }

  /// <summary>
  /// The json value of the MiddleName attribute.</summary>
  [JsonPropertyName("middleName")]
  [Computed]
  public string MiddleName_Json
  {
    get => NullIf(MiddleName, "");
    set => MiddleName = value;
  }

  /// <summary>Length of the LAST_NAME attribute.</summary>
  public const int LastName_MaxLength = 30;

  /// <summary>
  /// The value of the LAST_NAME attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 19, Type = MemberType.Char, Length = LastName_MaxLength)]
  public string LastName
  {
    get => lastName ?? "";
    set => lastName = TrimEnd(Substring(value, 1, LastName_MaxLength));
  }

  /// <summary>
  /// The json value of the LastName attribute.</summary>
  [JsonPropertyName("lastName")]
  [Computed]
  public string LastName_Json
  {
    get => NullIf(LastName, "");
    set => LastName = value;
  }

  /// <summary>Length of the CITY_OF_BIRTH attribute.</summary>
  public const int CityOfBirth_MaxLength = 16;

  /// <summary>
  /// The value of the CITY_OF_BIRTH attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 20, Type = MemberType.Char, Length = CityOfBirth_MaxLength)]
  public string CityOfBirth
  {
    get => cityOfBirth ?? "";
    set => cityOfBirth = TrimEnd(Substring(value, 1, CityOfBirth_MaxLength));
  }

  /// <summary>
  /// The json value of the CityOfBirth attribute.</summary>
  [JsonPropertyName("cityOfBirth")]
  [Computed]
  public string CityOfBirth_Json
  {
    get => NullIf(CityOfBirth, "");
    set => CityOfBirth = value;
  }

  /// <summary>Length of the STATE_CNTY_BIRTH attribute.</summary>
  public const int StateCntyBirth_MaxLength = 4;

  /// <summary>
  /// The value of the STATE_CNTY_BIRTH attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 21, Type = MemberType.Char, Length = StateCntyBirth_MaxLength)]
    
  public string StateCntyBirth
  {
    get => stateCntyBirth ?? "";
    set => stateCntyBirth =
      TrimEnd(Substring(value, 1, StateCntyBirth_MaxLength));
  }

  /// <summary>
  /// The json value of the StateCntyBirth attribute.</summary>
  [JsonPropertyName("stateCntyBirth")]
  [Computed]
  public string StateCntyBirth_Json
  {
    get => NullIf(StateCntyBirth, "");
    set => StateCntyBirth = value;
  }

  /// <summary>Length of the FATHERS_FIRST_NAME attribute.</summary>
  public const int FathersFirstName_MaxLength = 16;

  /// <summary>
  /// The value of the FATHERS_FIRST_NAME attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 22, Type = MemberType.Char, Length
    = FathersFirstName_MaxLength)]
  public string FathersFirstName
  {
    get => fathersFirstName ?? "";
    set => fathersFirstName =
      TrimEnd(Substring(value, 1, FathersFirstName_MaxLength));
  }

  /// <summary>
  /// The json value of the FathersFirstName attribute.</summary>
  [JsonPropertyName("fathersFirstName")]
  [Computed]
  public string FathersFirstName_Json
  {
    get => NullIf(FathersFirstName, "");
    set => FathersFirstName = value;
  }

  /// <summary>Length of the FATHERS_MID_NAME attribute.</summary>
  public const int FathersMidName_MaxLength = 1;

  /// <summary>
  /// The value of the FATHERS_MID_NAME attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 23, Type = MemberType.Char, Length = FathersMidName_MaxLength)]
    
  public string FathersMidName
  {
    get => fathersMidName ?? "";
    set => fathersMidName =
      TrimEnd(Substring(value, 1, FathersMidName_MaxLength));
  }

  /// <summary>
  /// The json value of the FathersMidName attribute.</summary>
  [JsonPropertyName("fathersMidName")]
  [Computed]
  public string FathersMidName_Json
  {
    get => NullIf(FathersMidName, "");
    set => FathersMidName = value;
  }

  /// <summary>Length of the FATHERS_LAST_NAME attribute.</summary>
  public const int FathersLastName_MaxLength = 16;

  /// <summary>
  /// The value of the FATHERS_LAST_NAME attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 24, Type = MemberType.Char, Length = FathersLastName_MaxLength)
    ]
  public string FathersLastName
  {
    get => fathersLastName ?? "";
    set => fathersLastName =
      TrimEnd(Substring(value, 1, FathersLastName_MaxLength));
  }

  /// <summary>
  /// The json value of the FathersLastName attribute.</summary>
  [JsonPropertyName("fathersLastName")]
  [Computed]
  public string FathersLastName_Json
  {
    get => NullIf(FathersLastName, "");
    set => FathersLastName = value;
  }

  /// <summary>Length of the MOTHERS_FIRST_NAME attribute.</summary>
  public const int MothersFirstName_MaxLength = 16;

  /// <summary>
  /// The value of the MOTHERS_FIRST_NAME attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 25, Type = MemberType.Char, Length
    = MothersFirstName_MaxLength)]
  public string MothersFirstName
  {
    get => mothersFirstName ?? "";
    set => mothersFirstName =
      TrimEnd(Substring(value, 1, MothersFirstName_MaxLength));
  }

  /// <summary>
  /// The json value of the MothersFirstName attribute.</summary>
  [JsonPropertyName("mothersFirstName")]
  [Computed]
  public string MothersFirstName_Json
  {
    get => NullIf(MothersFirstName, "");
    set => MothersFirstName = value;
  }

  /// <summary>Length of the MOTHERS_MID_NAME attribute.</summary>
  public const int MothersMidName_MaxLength = 1;

  /// <summary>
  /// The value of the MOTHERS_MID_NAME attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 26, Type = MemberType.Char, Length = MothersMidName_MaxLength)]
    
  public string MothersMidName
  {
    get => mothersMidName ?? "";
    set => mothersMidName =
      TrimEnd(Substring(value, 1, MothersMidName_MaxLength));
  }

  /// <summary>
  /// The json value of the MothersMidName attribute.</summary>
  [JsonPropertyName("mothersMidName")]
  [Computed]
  public string MothersMidName_Json
  {
    get => NullIf(MothersMidName, "");
    set => MothersMidName = value;
  }

  /// <summary>Length of the MOTHERS_LAST_NAME attribute.</summary>
  public const int MothersLastName_MaxLength = 16;

  /// <summary>
  /// The value of the MOTHERS_LAST_NAME attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 27, Type = MemberType.Char, Length = MothersLastName_MaxLength)
    ]
  public string MothersLastName
  {
    get => mothersLastName ?? "";
    set => mothersLastName =
      TrimEnd(Substring(value, 1, MothersLastName_MaxLength));
  }

  /// <summary>
  /// The json value of the MothersLastName attribute.</summary>
  [JsonPropertyName("mothersLastName")]
  [Computed]
  public string MothersLastName_Json
  {
    get => NullIf(MothersLastName, "");
    set => MothersLastName = value;
  }

  /// <summary>Length of the IRS_U_SSN attribute.</summary>
  public const int IrsUSsn_MaxLength = 9;

  /// <summary>
  /// The value of the IRS_U_SSN attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 28, Type = MemberType.Char, Length = IrsUSsn_MaxLength)]
  public string IrsUSsn
  {
    get => irsUSsn ?? "";
    set => irsUSsn = TrimEnd(Substring(value, 1, IrsUSsn_MaxLength));
  }

  /// <summary>
  /// The json value of the IrsUSsn attribute.</summary>
  [JsonPropertyName("irsUSsn")]
  [Computed]
  public string IrsUSsn_Json
  {
    get => NullIf(IrsUSsn, "");
    set => IrsUSsn = value;
  }

  /// <summary>Length of the ADDITIONAL_SSN1 attribute.</summary>
  public const int AdditionalSsn1_MaxLength = 9;

  /// <summary>
  /// The value of the ADDITIONAL_SSN1 attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 29, Type = MemberType.Char, Length = AdditionalSsn1_MaxLength)]
    
  public string AdditionalSsn1
  {
    get => additionalSsn1 ?? "";
    set => additionalSsn1 =
      TrimEnd(Substring(value, 1, AdditionalSsn1_MaxLength));
  }

  /// <summary>
  /// The json value of the AdditionalSsn1 attribute.</summary>
  [JsonPropertyName("additionalSsn1")]
  [Computed]
  public string AdditionalSsn1_Json
  {
    get => NullIf(AdditionalSsn1, "");
    set => AdditionalSsn1 = value;
  }

  /// <summary>Length of the ADDITIONAL_SSN2 attribute.</summary>
  public const int AdditionalSsn2_MaxLength = 9;

  /// <summary>
  /// The value of the ADDITIONAL_SSN2 attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 30, Type = MemberType.Char, Length = AdditionalSsn2_MaxLength)]
    
  public string AdditionalSsn2
  {
    get => additionalSsn2 ?? "";
    set => additionalSsn2 =
      TrimEnd(Substring(value, 1, AdditionalSsn2_MaxLength));
  }

  /// <summary>
  /// The json value of the AdditionalSsn2 attribute.</summary>
  [JsonPropertyName("additionalSsn2")]
  [Computed]
  public string AdditionalSsn2_Json
  {
    get => NullIf(AdditionalSsn2, "");
    set => AdditionalSsn2 = value;
  }

  /// <summary>Length of the ADDITIONAL_FNAM1 attribute.</summary>
  public const int AdditionalFnam1_MaxLength = 16;

  /// <summary>
  /// The value of the ADDITIONAL_FNAM1 attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 31, Type = MemberType.Char, Length = AdditionalFnam1_MaxLength)
    ]
  public string AdditionalFnam1
  {
    get => additionalFnam1 ?? "";
    set => additionalFnam1 =
      TrimEnd(Substring(value, 1, AdditionalFnam1_MaxLength));
  }

  /// <summary>
  /// The json value of the AdditionalFnam1 attribute.</summary>
  [JsonPropertyName("additionalFnam1")]
  [Computed]
  public string AdditionalFnam1_Json
  {
    get => NullIf(AdditionalFnam1, "");
    set => AdditionalFnam1 = value;
  }

  /// <summary>Length of the ADDITIONAL_MNAM1 attribute.</summary>
  public const int AdditionalMnam1_MaxLength = 16;

  /// <summary>
  /// The value of the ADDITIONAL_MNAM1 attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 32, Type = MemberType.Char, Length = AdditionalMnam1_MaxLength)
    ]
  public string AdditionalMnam1
  {
    get => additionalMnam1 ?? "";
    set => additionalMnam1 =
      TrimEnd(Substring(value, 1, AdditionalMnam1_MaxLength));
  }

  /// <summary>
  /// The json value of the AdditionalMnam1 attribute.</summary>
  [JsonPropertyName("additionalMnam1")]
  [Computed]
  public string AdditionalMnam1_Json
  {
    get => NullIf(AdditionalMnam1, "");
    set => AdditionalMnam1 = value;
  }

  /// <summary>Length of the ADDITIONAL_LNAM1 attribute.</summary>
  public const int AdditionalLnam1_MaxLength = 30;

  /// <summary>
  /// The value of the ADDITIONAL_LNAM1 attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 33, Type = MemberType.Char, Length = AdditionalLnam1_MaxLength)
    ]
  public string AdditionalLnam1
  {
    get => additionalLnam1 ?? "";
    set => additionalLnam1 =
      TrimEnd(Substring(value, 1, AdditionalLnam1_MaxLength));
  }

  /// <summary>
  /// The json value of the AdditionalLnam1 attribute.</summary>
  [JsonPropertyName("additionalLnam1")]
  [Computed]
  public string AdditionalLnam1_Json
  {
    get => NullIf(AdditionalLnam1, "");
    set => AdditionalLnam1 = value;
  }

  /// <summary>Length of the ADDITIONAL_FNAM2 attribute.</summary>
  public const int AdditionalFnam2_MaxLength = 16;

  /// <summary>
  /// The value of the ADDITIONAL_FNAM2 attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 34, Type = MemberType.Char, Length = AdditionalFnam2_MaxLength)
    ]
  public string AdditionalFnam2
  {
    get => additionalFnam2 ?? "";
    set => additionalFnam2 =
      TrimEnd(Substring(value, 1, AdditionalFnam2_MaxLength));
  }

  /// <summary>
  /// The json value of the AdditionalFnam2 attribute.</summary>
  [JsonPropertyName("additionalFnam2")]
  [Computed]
  public string AdditionalFnam2_Json
  {
    get => NullIf(AdditionalFnam2, "");
    set => AdditionalFnam2 = value;
  }

  /// <summary>Length of the ADDITIONAL_MNAM2 attribute.</summary>
  public const int AdditionalMnam2_MaxLength = 16;

  /// <summary>
  /// The value of the ADDITIONAL_MNAM2 attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 35, Type = MemberType.Char, Length = AdditionalMnam2_MaxLength)
    ]
  public string AdditionalMnam2
  {
    get => additionalMnam2 ?? "";
    set => additionalMnam2 =
      TrimEnd(Substring(value, 1, AdditionalMnam2_MaxLength));
  }

  /// <summary>
  /// The json value of the AdditionalMnam2 attribute.</summary>
  [JsonPropertyName("additionalMnam2")]
  [Computed]
  public string AdditionalMnam2_Json
  {
    get => NullIf(AdditionalMnam2, "");
    set => AdditionalMnam2 = value;
  }

  /// <summary>Length of the ADDITIONAL_LNAM2 attribute.</summary>
  public const int AdditionalLnam2_MaxLength = 30;

  /// <summary>
  /// The value of the ADDITIONAL_LNAM2 attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 36, Type = MemberType.Char, Length = AdditionalLnam2_MaxLength)
    ]
  public string AdditionalLnam2
  {
    get => additionalLnam2 ?? "";
    set => additionalLnam2 =
      TrimEnd(Substring(value, 1, AdditionalLnam2_MaxLength));
  }

  /// <summary>
  /// The json value of the AdditionalLnam2 attribute.</summary>
  [JsonPropertyName("additionalLnam2")]
  [Computed]
  public string AdditionalLnam2_Json
  {
    get => NullIf(AdditionalLnam2, "");
    set => AdditionalLnam2 = value;
  }

  /// <summary>Length of the ADDITIONAL_FNAM3 attribute.</summary>
  public const int AdditionalFnam3_MaxLength = 16;

  /// <summary>
  /// The value of the ADDITIONAL_FNAM3 attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 37, Type = MemberType.Char, Length = AdditionalFnam3_MaxLength)
    ]
  public string AdditionalFnam3
  {
    get => additionalFnam3 ?? "";
    set => additionalFnam3 =
      TrimEnd(Substring(value, 1, AdditionalFnam3_MaxLength));
  }

  /// <summary>
  /// The json value of the AdditionalFnam3 attribute.</summary>
  [JsonPropertyName("additionalFnam3")]
  [Computed]
  public string AdditionalFnam3_Json
  {
    get => NullIf(AdditionalFnam3, "");
    set => AdditionalFnam3 = value;
  }

  /// <summary>Length of the ADDITIONAL_MNAM3 attribute.</summary>
  public const int AdditionalMnam3_MaxLength = 16;

  /// <summary>
  /// The value of the ADDITIONAL_MNAM3 attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 38, Type = MemberType.Char, Length = AdditionalMnam3_MaxLength)
    ]
  public string AdditionalMnam3
  {
    get => additionalMnam3 ?? "";
    set => additionalMnam3 =
      TrimEnd(Substring(value, 1, AdditionalMnam3_MaxLength));
  }

  /// <summary>
  /// The json value of the AdditionalMnam3 attribute.</summary>
  [JsonPropertyName("additionalMnam3")]
  [Computed]
  public string AdditionalMnam3_Json
  {
    get => NullIf(AdditionalMnam3, "");
    set => AdditionalMnam3 = value;
  }

  /// <summary>Length of the ADDITIONAL_LNAM3 attribute.</summary>
  public const int AdditionalLnam3_MaxLength = 30;

  /// <summary>
  /// The value of the ADDITIONAL_LNAM3 attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 39, Type = MemberType.Char, Length = AdditionalLnam3_MaxLength)
    ]
  public string AdditionalLnam3
  {
    get => additionalLnam3 ?? "";
    set => additionalLnam3 =
      TrimEnd(Substring(value, 1, AdditionalLnam3_MaxLength));
  }

  /// <summary>
  /// The json value of the AdditionalLnam3 attribute.</summary>
  [JsonPropertyName("additionalLnam3")]
  [Computed]
  public string AdditionalLnam3_Json
  {
    get => NullIf(AdditionalLnam3, "");
    set => AdditionalLnam3 = value;
  }

  /// <summary>Length of the ADDITIONAL_FNAM4 attribute.</summary>
  public const int AdditionalFnam4_MaxLength = 16;

  /// <summary>
  /// The value of the ADDITIONAL_FNAM4 attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 40, Type = MemberType.Char, Length = AdditionalFnam4_MaxLength)
    ]
  public string AdditionalFnam4
  {
    get => additionalFnam4 ?? "";
    set => additionalFnam4 =
      TrimEnd(Substring(value, 1, AdditionalFnam4_MaxLength));
  }

  /// <summary>
  /// The json value of the AdditionalFnam4 attribute.</summary>
  [JsonPropertyName("additionalFnam4")]
  [Computed]
  public string AdditionalFnam4_Json
  {
    get => NullIf(AdditionalFnam4, "");
    set => AdditionalFnam4 = value;
  }

  /// <summary>Length of the ADDITIONAL_MNAM4 attribute.</summary>
  public const int AdditionalMnam4_MaxLength = 16;

  /// <summary>
  /// The value of the ADDITIONAL_MNAM4 attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 41, Type = MemberType.Char, Length = AdditionalMnam4_MaxLength)
    ]
  public string AdditionalMnam4
  {
    get => additionalMnam4 ?? "";
    set => additionalMnam4 =
      TrimEnd(Substring(value, 1, AdditionalMnam4_MaxLength));
  }

  /// <summary>
  /// The json value of the AdditionalMnam4 attribute.</summary>
  [JsonPropertyName("additionalMnam4")]
  [Computed]
  public string AdditionalMnam4_Json
  {
    get => NullIf(AdditionalMnam4, "");
    set => AdditionalMnam4 = value;
  }

  /// <summary>Length of the ADDITIONAL_LNAM4 attribute.</summary>
  public const int AdditionalLnam4_MaxLength = 30;

  /// <summary>
  /// The value of the ADDITIONAL_LNAM4 attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 42, Type = MemberType.Char, Length = AdditionalLnam4_MaxLength)
    ]
  public string AdditionalLnam4
  {
    get => additionalLnam4 ?? "";
    set => additionalLnam4 =
      TrimEnd(Substring(value, 1, AdditionalLnam4_MaxLength));
  }

  /// <summary>
  /// The json value of the AdditionalLnam4 attribute.</summary>
  [JsonPropertyName("additionalLnam4")]
  [Computed]
  public string AdditionalLnam4_Json
  {
    get => NullIf(AdditionalLnam4, "");
    set => AdditionalLnam4 = value;
  }

  /// <summary>Length of the NEW_MEMBER_ID attribute.</summary>
  public const int NewMemberId_MaxLength = 10;

  /// <summary>
  /// The value of the NEW_MEMBER_ID attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 43, Type = MemberType.Char, Length = NewMemberId_MaxLength)]
  public string NewMemberId
  {
    get => newMemberId ?? "";
    set => newMemberId = TrimEnd(Substring(value, 1, NewMemberId_MaxLength));
  }

  /// <summary>
  /// The json value of the NewMemberId attribute.</summary>
  [JsonPropertyName("newMemberId")]
  [Computed]
  public string NewMemberId_Json
  {
    get => NullIf(NewMemberId, "");
    set => NewMemberId = value;
  }

  /// <summary>Length of the IRS_1099 attribute.</summary>
  public const int Irs1099_MaxLength = 1;

  /// <summary>
  /// The value of the IRS_1099 attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 44, Type = MemberType.Char, Length = Irs1099_MaxLength)]
  public string Irs1099
  {
    get => irs1099 ?? "";
    set => irs1099 = TrimEnd(Substring(value, 1, Irs1099_MaxLength));
  }

  /// <summary>
  /// The json value of the Irs1099 attribute.</summary>
  [JsonPropertyName("irs1099")]
  [Computed]
  public string Irs1099_Json
  {
    get => NullIf(Irs1099, "");
    set => Irs1099 = value;
  }

  /// <summary>Length of the LOCATE_SOURCE1 attribute.</summary>
  public const int LocateSource1_MaxLength = 3;

  /// <summary>
  /// The value of the LOCATE_SOURCE1 attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 45, Type = MemberType.Char, Length = LocateSource1_MaxLength)]
  public string LocateSource1
  {
    get => locateSource1 ?? "";
    set => locateSource1 =
      TrimEnd(Substring(value, 1, LocateSource1_MaxLength));
  }

  /// <summary>
  /// The json value of the LocateSource1 attribute.</summary>
  [JsonPropertyName("locateSource1")]
  [Computed]
  public string LocateSource1_Json
  {
    get => NullIf(LocateSource1, "");
    set => LocateSource1 = value;
  }

  /// <summary>Length of the LOCATE_SOURCE2 attribute.</summary>
  public const int LocateSource2_MaxLength = 3;

  /// <summary>
  /// The value of the LOCATE_SOURCE2 attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 46, Type = MemberType.Char, Length = LocateSource2_MaxLength)]
  public string LocateSource2
  {
    get => locateSource2 ?? "";
    set => locateSource2 =
      TrimEnd(Substring(value, 1, LocateSource2_MaxLength));
  }

  /// <summary>
  /// The json value of the LocateSource2 attribute.</summary>
  [JsonPropertyName("locateSource2")]
  [Computed]
  public string LocateSource2_Json
  {
    get => NullIf(LocateSource2, "");
    set => LocateSource2 = value;
  }

  /// <summary>Length of the LOCATE_SOURCE3 attribute.</summary>
  public const int LocateSource3_MaxLength = 3;

  /// <summary>
  /// The value of the LOCATE_SOURCE3 attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 47, Type = MemberType.Char, Length = LocateSource3_MaxLength)]
  public string LocateSource3
  {
    get => locateSource3 ?? "";
    set => locateSource3 =
      TrimEnd(Substring(value, 1, LocateSource3_MaxLength));
  }

  /// <summary>
  /// The json value of the LocateSource3 attribute.</summary>
  [JsonPropertyName("locateSource3")]
  [Computed]
  public string LocateSource3_Json
  {
    get => NullIf(LocateSource3, "");
    set => LocateSource3 = value;
  }

  /// <summary>Length of the LOCATE_SOURCE4 attribute.</summary>
  public const int LocateSource4_MaxLength = 3;

  /// <summary>
  /// The value of the LOCATE_SOURCE4 attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 48, Type = MemberType.Char, Length = LocateSource4_MaxLength)]
  public string LocateSource4
  {
    get => locateSource4 ?? "";
    set => locateSource4 =
      TrimEnd(Substring(value, 1, LocateSource4_MaxLength));
  }

  /// <summary>
  /// The json value of the LocateSource4 attribute.</summary>
  [JsonPropertyName("locateSource4")]
  [Computed]
  public string LocateSource4_Json
  {
    get => NullIf(LocateSource4, "");
    set => LocateSource4 = value;
  }

  /// <summary>Length of the LOCATE_SOURCE5 attribute.</summary>
  public const int LocateSource5_MaxLength = 3;

  /// <summary>
  /// The value of the LOCATE_SOURCE5 attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 49, Type = MemberType.Char, Length = LocateSource5_MaxLength)]
  public string LocateSource5
  {
    get => locateSource5 ?? "";
    set => locateSource5 =
      TrimEnd(Substring(value, 1, LocateSource5_MaxLength));
  }

  /// <summary>
  /// The json value of the LocateSource5 attribute.</summary>
  [JsonPropertyName("locateSource5")]
  [Computed]
  public string LocateSource5_Json
  {
    get => NullIf(LocateSource5, "");
    set => LocateSource5 = value;
  }

  /// <summary>Length of the LOCATE_SOURCE6 attribute.</summary>
  public const int LocateSource6_MaxLength = 3;

  /// <summary>
  /// The value of the LOCATE_SOURCE6 attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 50, Type = MemberType.Char, Length = LocateSource6_MaxLength)]
  public string LocateSource6
  {
    get => locateSource6 ?? "";
    set => locateSource6 =
      TrimEnd(Substring(value, 1, LocateSource6_MaxLength));
  }

  /// <summary>
  /// The json value of the LocateSource6 attribute.</summary>
  [JsonPropertyName("locateSource6")]
  [Computed]
  public string LocateSource6_Json
  {
    get => NullIf(LocateSource6, "");
    set => LocateSource6 = value;
  }

  /// <summary>Length of the LOCATE_SOURCE7 attribute.</summary>
  public const int LocateSource7_MaxLength = 3;

  /// <summary>
  /// The value of the LOCATE_SOURCE7 attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 51, Type = MemberType.Char, Length = LocateSource7_MaxLength)]
  public string LocateSource7
  {
    get => locateSource7 ?? "";
    set => locateSource7 =
      TrimEnd(Substring(value, 1, LocateSource7_MaxLength));
  }

  /// <summary>
  /// The json value of the LocateSource7 attribute.</summary>
  [JsonPropertyName("locateSource7")]
  [Computed]
  public string LocateSource7_Json
  {
    get => NullIf(LocateSource7, "");
    set => LocateSource7 = value;
  }

  /// <summary>Length of the LOCATE_SOURCE8 attribute.</summary>
  public const int LocateSource8_MaxLength = 3;

  /// <summary>
  /// The value of the LOCATE_SOURCE8 attribute.
  /// </summary>
  [JsonIgnore]
  [DefaultValue("")]
  [Member(Index = 52, Type = MemberType.Char, Length = LocateSource8_MaxLength)]
  public string LocateSource8
  {
    get => locateSource8 ?? "";
    set => locateSource8 =
      TrimEnd(Substring(value, 1, LocateSource8_MaxLength));
  }

  /// <summary>
  /// The json value of the LocateSource8 attribute.</summary>
  [JsonPropertyName("locateSource8")]
  [Computed]
  public string LocateSource8_Json
  {
    get => NullIf(LocateSource8, "");
    set => LocateSource8 = value;
  }

  private string recordId;
  private string actionTypeCode;
  private string caseId;
  private string fcrProcessingFld1;
  private string userField;
  private string fipsCountyCode;
  private string fcrProcessingFld2;
  private string locateReqType;
  private string bundleResults;
  private string participantType;
  private string familyViolence;
  private string memberId;
  private string sexCode;
  private string dateOfBirth;
  private string ssn;
  private string previousSsn;
  private string firstName;
  private string middleName;
  private string lastName;
  private string cityOfBirth;
  private string stateCntyBirth;
  private string fathersFirstName;
  private string fathersMidName;
  private string fathersLastName;
  private string mothersFirstName;
  private string mothersMidName;
  private string mothersLastName;
  private string irsUSsn;
  private string additionalSsn1;
  private string additionalSsn2;
  private string additionalFnam1;
  private string additionalMnam1;
  private string additionalLnam1;
  private string additionalFnam2;
  private string additionalMnam2;
  private string additionalLnam2;
  private string additionalFnam3;
  private string additionalMnam3;
  private string additionalLnam3;
  private string additionalFnam4;
  private string additionalMnam4;
  private string additionalLnam4;
  private string newMemberId;
  private string irs1099;
  private string locateSource1;
  private string locateSource2;
  private string locateSource3;
  private string locateSource4;
  private string locateSource5;
  private string locateSource6;
  private string locateSource7;
  private string locateSource8;
}
